{"version":3,"sources":["../src/dic-factory.js"],"names":["module","exports","fn","resolve","reject","ready","res","rej","err","emitter","resolveEvent","rejectEvent","resolveListener","rejectListener","removeListener","once"],"mappings":";;;;;;;;;;;;;;;;AAAAA,OAAOC,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAC+BC,EAD/B,EACmC;AAC/B,UAAIC,gBAAJ;AAAA,UAAaC,eAAb;AACA,UAAMC,QAAQ,sBAAY,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC3CJ,kBAAUG,GAAV;AACAF,iBAASG,GAAT;AACD,OAHa,CAAd;AAIAL,SAAG;AAAA,eAAOM,MAAMJ,OAAOI,GAAP,CAAN,GAAoBL,SAA3B;AAAA,OAAH;AACA,aAAOE,KAAP;AACD;AATH;AAAA;AAAA,yCAW8BI,OAX9B,EAWuCC,YAXvC,EAWqDC,WAXrD,EAWkE;AAC9D,UAAIR,gBAAJ;AAAA,UAAaC,eAAb;AAAA,UAAqBQ,wBAArB;AAAA,UAAsCC,uBAAtC;;AAEA,UAAMR,QAAQ,sBAAY,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC3CJ,kBAAUG,GAAV;AACAF,iBAASG,GAAT;AACD,OAHa,CAAd;;AAKAK,wBAAkB,2BAAM;AACtB,YAAID,WAAJ,EAAiB;AACfF,kBAAQK,cAAR,CAAuBH,WAAvB,EAAoCE,cAApC;AACD;AACDV,gBAAQM,OAAR;AACD,OALD;;AAOAA,cAAQM,IAAR,CAAaL,YAAb,EAA2BE,eAA3B;;AAEA,UAAID,WAAJ,EAAiB;AACfE,yBAAiB,wBAACL,GAAD,EAAS;AACxBC,kBAAQK,cAAR,CAAuBJ,YAAvB,EAAqCE,eAArC;AACAR,iBAAOI,GAAP;AACD,SAHD;AAIAC,gBAAQM,IAAR,CAAaJ,WAAb,EAA0BE,cAA1B;AACD;;AAED,aAAOR,KAAP;AACD;AArCH;AAAA;AAAA","file":"dic-factory.js","sourcesContent":["module.exports = class DicFactory {\n  static createCallbackPromise(fn) {\n    let resolve, reject;\n    const ready = new Promise(function(res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n    fn(err => err ? reject(err) : resolve());\n    return ready;\n  }\n\n  static createEmitterPromise(emitter, resolveEvent, rejectEvent) {\n    let resolve, reject, resolveListener, rejectListener;\n\n    const ready = new Promise(function(res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n\n    resolveListener = () => {\n      if (rejectEvent) {\n        emitter.removeListener(rejectEvent, rejectListener);\n      }\n      resolve(emitter);\n    };\n\n    emitter.once(resolveEvent, resolveListener);\n\n    if (rejectEvent) {\n      rejectListener = (err) => {\n        emitter.removeListener(resolveEvent, resolveListener);\n        reject(err);\n      };\n      emitter.once(rejectEvent, rejectListener);\n    }\n\n    return ready;\n  }\n};\n"]}